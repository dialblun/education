{
    "collab_server" : "",
    "contents" : "# Unit 4 - \"Judge, Jury, and Classifier\" Lecture\n\n\n# VIDEO 4\n\n# Read in the data\nstevens = read.csv(\"stevens.csv\")\nstr(stevens)\n\n# Split the data\nlibrary(caTools)\nset.seed(3000)\nspl = sample.split(stevens$Reverse, SplitRatio = 0.7)\nTrain = subset(stevens, spl==TRUE)\nTest = subset(stevens, spl==FALSE)\n\n# Install rpart library\ninstall.packages(\"rpart\")\nlibrary(rpart)\ninstall.packages(\"rpart.plot\")\nlibrary(rpart.plot)\n\n# CART model\nStevensTree = rpart(Reverse ~ Circuit + Issue + Petitioner + Respondent + LowerCourt + Unconst, data = Train, method=\"class\", minbucket=25)\n\nprp(StevensTree)\n\n# Make predictions\nPredictCART = predict(StevensTree, newdata = Test, type = \"class\")\ntable(Test$Reverse, PredictCART)\n(41+71)/(41+36+22+71)\n\n# ROC curve\nlibrary(ROCR)\n\nPredictROC = predict(StevensTree, newdata = Test)\nPredictROC\n\npred = prediction(PredictROC[,2], Test$Reverse)\nperf = performance(pred, \"tpr\", \"fpr\")\nplot(perf)\n\n\n\n# VIDEO 5 - Random Forests\n\n# Install randomForest package\ninstall.packages(\"randomForest\")\nlibrary(randomForest)\n\n# Build random forest model\nStevensForest = randomForest(Reverse ~ Circuit + Issue + Petitioner + Respondent + LowerCourt + Unconst, data = Train, ntree=200, nodesize=25 )\n\n# Convert outcome to factor\nTrain$Reverse = as.factor(Train$Reverse)\nTest$Reverse = as.factor(Test$Reverse)\n\n# Try again\nStevensForest = randomForest(Reverse ~ Circuit + Issue + Petitioner + Respondent + LowerCourt + Unconst, data = Train, ntree=200, nodesize=25 )\n\n# Make predictions\nPredictForest = predict(StevensForest, newdata = Test)\ntable(Test$Reverse, PredictForest)\n(40+74)/(40+37+19+74)\n\n\n\n# VIDEO 6\n\n# Install cross-validation packages\ninstall.packages(\"caret\")\nlibrary(caret)\ninstall.packages(\"e1071\")\nlibrary(e1071)\n\n# Define cross-validation experiment\nnumFolds = trainControl( method = \"cv\", number = 10 )\ncpGrid = expand.grid( .cp = seq(0.01,0.5,0.01)) \n\n# Perform the cross validation\ntrain(Reverse ~ Circuit + Issue + Petitioner + Respondent + LowerCourt + Unconst, data = Train, method = \"rpart\", trControl = numFolds, tuneGrid = cpGrid )\n\n# Create a new CART model\nStevensTreeCV = rpart(Reverse ~ Circuit + Issue + Petitioner + Respondent + LowerCourt + Unconst, data = Train, method=\"class\", cp = 0.18)\n\n# Make predictions\nPredictCV = predict(StevensTreeCV, newdata = Test, type = \"class\")\ntable(Test$Reverse, PredictCV)\n(59+64)/(59+18+29+64)\n\n",
    "created" : 1498920140864.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "548871048",
    "id" : "51629FF4",
    "lastKnownWriteTime" : 1498920114,
    "last_content_update" : 1498920114,
    "path" : "C:/Users/WALLI/Desktop/Di/edx/Analytic Edge/Unit4_SupremeCourt.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}